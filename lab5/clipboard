

		
		
var arrayvalue = card.text(card_array[i]); // adds text (letter) using the stinrg of the letters array
		

function counter() {
	setInterval
	
}


function create_smallboard() {
if medium
	make 20 divs/cards

if large 
	make 40 divs/cards

}

function card_hover() 
{
	$(this).addClass('cardhover');
}


function select_card() 
{
	if(selected_card != this) //selected color initially equal to null
	{
		$(selected_card).removeClass('selected'); //set up in case you've selected another box already
		selected_card = this; //the remembering part -- takes this div and puts it into "selected" and make it no longer null
		$(selected_card).addClass('selected'); //takes that selected div and puts it into .select class
	}

	else {
		$(selected_color).removeClass('selected'); //selected color is now equal to the div and removes class. then makes it null
		selected_color = null;
	}
}

}

function randomizeArray(array)
{
  var i = array.length;
  if (i == 0) return false;
  while (--i){
     var j = Math.floor(Math.random() * (i + 1));
     var tempi = array[i];
     var tempj = array[j];
     array[i] = tempj;
     array[j] = tempi;
  }
  return array;
}
}

~~~~
OTHER FUNCTIONS: 

card flip -- on click add class .display (change color ) and show text

if text value matches, keep class .display
else .remove class .display


FINAL:
once complete, chg bg of all cards one color and stay


/*
var selected_card = null;

$(function(){

	$('#createboxes').click(add_node); // add node for boxes
	$('#newboxes').on('hover', '.box', bgChange);
	$('#newboxes').on('dblclick', '.box', remove); 
	$('#newboxes').on('click', '.box', select_color);

});

function add_node()
{
	var createboxes = $('#inputcolors').val();   //get the value of the colors
	createboxes = createboxes.split(', '); //turns string of colors into an array
	for(var i = 0; i < createboxes.length; i++) //loop based on array length
	
	{
		var box = $('<div>'); //creates div for box
		box.addClass('box');  //adds class to that new div
		box.css('background-color', createboxes[i]); // changes bg color  using the index of the array
		$('#newboxes').append(box); 
	}
}


function bgChange()
{
	var bcolor = $(this).css('background-color'); //hover for bg color uses variable of bcolor, passes that variable to other div
	$('#inputcolors').css('background-color', bcolor);
}
  
function remove()
{
	$(this).remove();
}

function select_color() 
{
	if(selected_color != this) //selected color initially equal to null
	{
		$(selected_color).removeClass('selected'); //set up in case you've selected another box already
		selected_color = this; //the remembering part -- takes this div and puts it into "selected" and make it no longer null
		$(selected_color).addClass('selected'); //takes that selected div and puts it into .select class
	}

	else {
		$(selected_color).removeClass('selected'); //selected color is now equal to the div and removes class. then makes it null
		selected_color = null;
	}
}